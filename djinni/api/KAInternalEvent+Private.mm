// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from api.djinni

#import "KAInternalEvent+Private.h"
#import "KAInternalEvent.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#include <exception>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface KAInternalEvent ()

- (id)initWithCpp:(const std::shared_ptr<::Kullo::Api::InternalEvent>&)cppRef;

@end

@implementation KAInternalEvent {
    ::djinni::DbxCppWrapperCache<::Kullo::Api::InternalEvent>::Handle _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::Kullo::Api::InternalEvent>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

namespace ObjCpp { namespace Kullo { namespace Api {

auto InternalEvent::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return objc->_cppRefHandle.get();
}

auto InternalEvent::fromCpp(const CppType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return ::djinni::DbxCppWrapperCache<::Kullo::Api::InternalEvent>::getInstance()->get(cpp, [] (const CppType& p) {
        return [[KAInternalEvent alloc] initWithCpp:p];
    });
}

} } }  // namespace ObjCpp::Kullo::Api

@end
