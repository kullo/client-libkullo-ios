// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from messages.djinni

#import "KAMessagesSearchListener+Private.h"
#import "KAMessagesSearchListener.h"
#import "DJIMarshal+Private.h"
#import "DJIObjcWrapperCache+Private.h"
#import "KAMessagesSearchResult+Private.h"
#include <stdexcept>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

namespace ObjCpp { namespace Kullo { namespace Api {

class MessagesSearchListener::ObjcProxy final
: public ::Kullo::Api::MessagesSearchListener
, private ::djinni::ObjcProxyBase<ObjcType>
{
    friend class ::ObjCpp::Kullo::Api::MessagesSearchListener;
public:
    using ObjcProxyBase::ObjcProxyBase;
    void finished(const std::vector<::Kullo::Api::MessagesSearchResult> & c_results) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() finished:(::djinni::List<::ObjCpp::Kullo::Api::MessagesSearchResult>::fromCpp(c_results))];
        }
    }
};

} } }  // namespace ObjCpp::Kullo::Api

namespace ObjCpp { namespace Kullo { namespace Api {

auto MessagesSearchListener::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return ::djinni::get_objc_proxy<ObjcProxy>(objc);
}

auto MessagesSearchListener::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return dynamic_cast<ObjcProxy&>(*cpp).djinni_private_get_proxied_objc_object();
}

} } }  // namespace ObjCpp::Kullo::Api
