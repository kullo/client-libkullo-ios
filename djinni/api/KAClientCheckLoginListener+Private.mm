// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from api.djinni

#import "KAClientCheckLoginListener+Private.h"
#import "KAClientCheckLoginListener.h"
#import "DJIMarshal+Private.h"
#import "DJIObjcWrapperCache+Private.h"
#import "KAAddress+Private.h"
#import "KAMasterKey+Private.h"

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

namespace ObjCpp { namespace Kullo { namespace Api {

class ClientCheckLoginListener::ObjcProxy final
: public ::Kullo::Api::ClientCheckLoginListener
, public ::djinni::DbxObjcWrapperCache<ObjcProxy>::Handle
{
public:
    using Handle::Handle;
    void finished(const std::shared_ptr<::Kullo::Api::Address> & c_address, const std::shared_ptr<::Kullo::Api::MasterKey> & c_masterKey, bool c_valid) override
    {
        @autoreleasepool {
            [(ObjcType)Handle::get() finished:(::ObjCpp::Kullo::Api::Address::fromCpp(c_address))
                                    masterKey:(::ObjCpp::Kullo::Api::MasterKey::fromCpp(c_masterKey))
                                        valid:(::djinni::Bool::fromCpp(c_valid))];
        }
    }
    void error(const std::shared_ptr<::Kullo::Api::Address> & c_address, ::Kullo::Api::NetworkError c_error) override
    {
        @autoreleasepool {
            [(ObjcType)Handle::get() error:(::ObjCpp::Kullo::Api::Address::fromCpp(c_address))
                                     error:(::djinni::Enum<::Kullo::Api::NetworkError, KANetworkError>::fromCpp(c_error))];
        }
    }
};

} } }  // namespace ObjCpp::Kullo::Api

namespace ObjCpp { namespace Kullo { namespace Api {

auto ClientCheckLoginListener::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return ::djinni::DbxObjcWrapperCache<ObjcProxy>::getInstance()->get(objc);
}

auto ClientCheckLoginListener::fromCpp(const CppType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return dynamic_cast<ObjcProxy&>(*cpp).Handle::get();
}

} } }  // namespace ObjCpp::Kullo::Api
